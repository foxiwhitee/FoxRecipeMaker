buildscript {
    repositories {
        flatDir dirs: './proguard5.2.1/lib'
        mavenCentral()
        maven {
            name = "forge"
            url = "https://maven.minecraftforge.net/"
        }
        maven {
            name = "github"
            url = "https://github.com/juanmuscaria/maven/raw/master"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath ('com.anatawa12.forge:ForgeGradle:1.2-1.0.+') {
            changing = true
        }
    }
}

apply plugin: 'java'
apply plugin: 'forge'

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

version = mod_version
group = mod_group
archivesBaseName = mod_archives_name

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "run"
    replace "@VERSION@", project.version

}


dependencies {
    compile fileTree(dir: "libs", include: "*.jar")
    compileOnly fileTree(dir: "compileonly", include: "*.jar")
    compile "org.apache.poi:poi:3.12"
    compile "org.apache.poi:poi-ooxml:3.12"
    implementation 'org.jetbrains:annotations:16.0.2'
}

processResources {
    //exclude "appeng"
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version,
                'mod_id': mod_id,
                'mod_name': mod_name,
                'mod_author': mod_author,
                'mod_description': mod_description,
                'mc_version': mc_version,
                'mod_version': mod_version,
                'mod_icon': mod_icon
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}


jar {
//    exclude "appeng"
//    manifest {
//        attributes 'FMLCorePlugin': 'foxiwhitee.FoxRecipeMaker.asm.ASMCoreMod'
//        attributes 'FMLCorePluginContainsFMLMod': 'true'
//        attributes "ForceLoadAsMod": "true"
//    }
}


task devJar(type: Jar) {
    classifier = 'dev'
    //exclude "appeng"
    from sourceSets.main.output
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    //exclude "appeng"
    from sourceSets.main.allSource
}

artifacts {
    archives devJar
    archives sourcesJar
}

task obfuscateAll(dependsOn: ['obfuscateClient', 'obfuscateServer']) {}
